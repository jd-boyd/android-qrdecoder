<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="1024"
   height="1024"
   viewBox="0 0 270.93333 270.93333"
   version="1.1"
   id="svg1"
   inkscape:version="1.4.2 (1:1.4.2+202505120737+ebf0e940d0)"
   sodipodi:docname="logo.svg"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1.0"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#d1d1d1"
     inkscape:document-units="mm"
     inkscape:zoom="0.44809905"
     inkscape:cx="1041.0645"
     inkscape:cy="1096.8557"
     inkscape:window-width="3769"
     inkscape:window-height="2091"
     inkscape:window-x="71"
     inkscape:window-y="32"
     inkscape:window-maximized="1"
     inkscape:current-layer="layer1" />
  <defs
     id="defs1">
    <meshgradient
       inkscape:collect="always"
       id="meshgradient84"
       gradientUnits="userSpaceOnUse"
       x="-1550.4082"
       y="290.74805"
       gradientTransform="matrix(0.28519297,0,0,0.28519297,454.30657,-55.263531)">
      <meshrow
         id="meshrow270">
        <meshpatch
           id="meshpatch270">
          <stop
             path="c 72.4575,0  144.915,0  217.372,0"
             style="stop-color:#19aef7;stop-opacity:1"
             id="stop270" />
          <stop
             path="c 0.391348,27.2055  0.684858,55.4873  0.898876,84.6434"
             style="stop-color:#19aef7;stop-opacity:1"
             id="stop271" />
          <stop
             path="c -72.7567,3.29593  -145.514,6.59186  -218.271,9.88778"
             style="stop-color:#19aef7;stop-opacity:1"
             id="stop272" />
          <stop
             path="c 5.10938e-05,-31.5103  6.32812e-05,-63.0207  -1.67188e-05,-94.5312"
             style="stop-color:#19aef7;stop-opacity:1"
             id="stop273" />
        </meshpatch>
        <meshpatch
           id="meshpatch273">
          <stop
             path="c 72.4575,0  144.915,0  217.372,0"
             id="stop274" />
          <stop
             path="c 0.782695,22.9005  1.36972,47.9535  1.79775,74.7554"
             style="stop-color:#936c6a;stop-opacity:1"
             id="stop275" />
          <stop
             path="c -72.7567,3.29604  -145.514,6.59206  -218.271,9.888"
             style="stop-color:#c9536b;stop-opacity:1"
             id="stop276" />
        </meshpatch>
        <meshpatch
           id="meshpatch276">
          <stop
             path="c 72.4575,0  144.915,0  217.373,0"
             id="stop277" />
          <stop
             path="c 0.391347,27.2055  0.684857,55.4873  0.898876,84.6434"
             style="stop-color:#fa5e32;stop-opacity:1"
             id="stop278" />
          <stop
             path="c -72.1583,-3.29603  -144.316,-6.59206  -216.474,-9.888"
             style="stop-color:#fa5e32;stop-opacity:1"
             id="stop279" />
        </meshpatch>
        <meshpatch
           id="meshpatch279">
          <stop
             path="c 72.4575,0  144.915,0  217.372,0"
             id="stop280" />
          <stop
             path="c 0,31.5102  0,63.0205  0,94.5308"
             style="stop-color:#fa5e32;stop-opacity:1"
             id="stop281" />
          <stop
             path="c -72.1575,-3.29578  -144.315,-6.59157  -216.473,-9.88744"
             style="stop-color:#fa5e32;stop-opacity:1"
             id="stop282" />
        </meshpatch>
      </meshrow>
      <meshrow
         id="meshrow282">
        <meshpatch
           id="meshpatch282">
          <stop
             path="c 0.214018,29.1561  0.348544,59.1866  0.421924,89.8896"
             id="stop283" />
          <stop
             path="c -72.8975,4.84301  -145.796,9.68603  -218.693,14.529"
             style="stop-color:#19aef7;stop-opacity:1"
             id="stop284" />
          <stop
             path="c 7.5625e-05,-31.5103  0.000165625,-63.0206  0.000216719,-94.5308"
             style="stop-color:#19aef7;stop-opacity:1"
             id="stop285" />
        </meshpatch>
        <meshpatch
           id="meshpatch285">
          <stop
             path="c 0.428038,26.8019  0.69709,55.3526  0.843845,85.2486"
             id="stop286" />
          <stop
             path="c -72.8974,4.84307  -145.795,9.68612  -218.693,14.529"
             style="stop-color:#ff3a6d;stop-opacity:1"
             id="stop287" />
        </meshpatch>
        <meshpatch
           id="meshpatch287">
          <stop
             path="c 0.214018,29.1561  0.348544,59.1866  0.421924,89.8896"
             id="stop288" />
          <stop
             path="c -72.0176,-4.84307  -144.035,-9.68612  -216.052,-14.529"
             style="stop-color:#ac616e;stop-opacity:1"
             id="stop289" />
        </meshpatch>
        <meshpatch
           id="meshpatch289">
          <stop
             path="c 0,31.5103  0,63.0207  0,94.5312"
             id="stop290" />
          <stop
             path="c -72.0169,-4.84294  -144.034,-9.68588  -216.051,-14.529"
             style="stop-color:#fe5936;stop-opacity:1"
             id="stop291" />
        </meshpatch>
      </meshrow>
      <meshrow
         id="meshrow291">
        <meshpatch
           id="meshpatch291">
          <stop
             path="c 0.146755,61.4062  0.0489175,125.503  -0.146758,190.676"
             id="stop292" />
          <stop
             path="c -72.8487,4.30487  -145.698,8.60975  -218.547,12.9146"
             style="stop-color:#919b74;stop-opacity:1"
             id="stop293" />
          <stop
             path="c 6.25e-05,-63.0205  0.00015625,-126.041  0.000758,-189.062"
             style="stop-color:#92ba69;stop-opacity:1"
             id="stop294" />
        </meshpatch>
        <meshpatch
           id="meshpatch294">
          <stop
             path="c 0.293511,59.7919  0.0978387,124.965  -0.293506,192.29"
             id="stop295" />
          <stop
             path="c -72.8486,4.30488  -145.697,8.60975  -218.546,12.915"
             style="stop-color:#907e80;stop-opacity:1"
             id="stop296" />
        </meshpatch>
        <meshpatch
           id="meshpatch296">
          <stop
             path="c 0.146755,61.4062  0.0489175,125.503  -0.146758,190.676"
             id="stop297" />
          <stop
             path="c -72.0664,-4.30488  -144.133,-8.60975  -216.199,-12.915"
             style="stop-color:#90608c;stop-opacity:1"
             id="stop298" />
        </meshpatch>
        <meshpatch
           id="meshpatch298">
          <stop
             path="c 0,63.0205  0,126.041  0,189.062"
             id="stop299" />
          <stop
             path="c -72.0659,-4.30488  -144.132,-8.60975  -216.198,-12.915"
             style="stop-color:#904398;stop-opacity:1"
             id="stop300" />
        </meshpatch>
      </meshrow>
      <meshrow
         id="meshrow300">
        <meshpatch
           id="meshpatch300">
          <stop
             path="c -0.195673,65.173  -0.489183,131.422  -0.733775,197.133"
             id="stop301" />
          <stop
             path="c -72.6042,1.61436  -145.209,3.22872  -217.813,4.84307"
             style="stop-color:#ffd100;stop-opacity:1"
             id="stop302" />
          <stop
             path="c 5e-06,-63.0206  1.5e-05,-126.041  -0.000225,-189.061"
             style="stop-color:#ffd100;stop-opacity:1"
             id="stop303" />
        </meshpatch>
        <meshpatch
           id="meshpatch303">
          <stop
             path="c -0.391348,67.3255  -0.97837,136.803  -1.46756,205.205"
             id="stop304" />
          <stop
             path="c -72.6041,1.61432  -145.208,3.22863  -217.812,4.843"
             style="stop-color:#8f878b;stop-opacity:1"
             id="stop305" />
        </meshpatch>
        <meshpatch
           id="meshpatch305">
          <stop
             path="c -0.195674,65.173  -0.489184,131.422  -0.733775,197.133"
             id="stop306" />
          <stop
             path="c -72.3109,-1.61431  -144.622,-3.22862  -216.933,-4.843"
             style="stop-color:#745faa;stop-opacity:1"
             id="stop307" />
        </meshpatch>
        <meshpatch
           id="meshpatch307">
          <stop
             path="c 0,63.0205  0,126.041  0,189.061"
             id="stop308" />
          <stop
             path="c -72.3106,-1.61431  -144.621,-3.22862  -216.932,-4.843"
             style="stop-color:#5937c9;stop-opacity:1"
             id="stop309" />
        </meshpatch>
      </meshrow>
      <meshrow
         id="meshrow309">
        <meshpatch
           id="meshpatch309">
          <stop
             path="c -0.244592,65.7111  -0.440265,130.884  -0.440265,193.905"
             id="stop310" />
          <stop
             path="c -72.4575,0  -144.915,0  -217.373,0"
             style="stop-color:#ffd100;stop-opacity:1"
             id="stop311" />
          <stop
             path="c 0,-63.0205  0,-126.041  0.000265,-189.062"
             style="stop-color:#ffd100;stop-opacity:1"
             id="stop312" />
        </meshpatch>
        <meshpatch
           id="meshpatch312">
          <stop
             path="c -0.489185,68.4017  -0.880534,135.727  -0.880534,198.748"
             id="stop313" />
          <stop
             path="c -72.4575,0  -144.915,0  -217.372,0"
             style="stop-color:#8e9097;stop-opacity:1"
             id="stop314" />
        </meshpatch>
        <meshpatch
           id="meshpatch314">
          <stop
             path="c -0.244592,65.7111  -0.440265,130.884  -0.440265,193.905"
             id="stop315" />
          <stop
             path="c -72.4575,0  -144.915,0  -217.373,0"
             style="stop-color:#585ec9;stop-opacity:1"
             id="stop316" />
        </meshpatch>
        <meshpatch
           id="meshpatch316">
          <stop
             path="c 0,63.0205  0,126.041  0,189.062"
             id="stop317" />
          <stop
             path="c -72.4575,0  -144.915,0  -217.372,0"
             style="stop-color:#222cfb;stop-opacity:1"
             id="stop318" />
        </meshpatch>
      </meshrow>
    </meshgradient>
  </defs>
  <g
     inkscape:label="Layer 1"
     inkscape:groupmode="layer"
     id="layer1">
    <rect
       style="display:inline;fill:#1a1a1a;fill-opacity:1;stroke:none;stroke-width:0.670904"
       id="rect318"
       width="270.93332"
       height="270.93332"
       x="0.66062337"
       y="0.027247444"
       ry="3.1425524"
       inkscape:export-filename="../logo.png"
       inkscape:export-xdpi="103.4779"
       inkscape:export-ydpi="103.4779" />
    <path
       id="rect18"
       style="display:inline;fill:url(#meshgradient84);fill-opacity:1;stroke:none;stroke-width:0.672608"
       d="m 113.26479,27.65577 c -1.57401,0 -2.84136,1.266791 -2.84136,2.840785 v 3.998831 c 0,1.573994 1.26735,2.841347 2.84136,2.841347 h 3.78827 c 1.57398,0 2.84078,-1.267353 2.84078,-2.841347 v -3.998831 c 0,-1.573994 -1.2668,-2.840785 -2.84078,-2.840785 z m 15.36308,0 c -1.57396,0 -2.84135,1.266791 -2.84135,2.840785 v 3.998831 c 0,1.573994 1.26739,2.841347 2.84135,2.841347 h 3.78828 c 1.57402,0 2.84081,-1.267353 2.84081,-2.841347 v -3.998831 c 0,-1.573994 -1.26679,-2.840785 -2.84081,-2.840785 z m -33.251699,0.420547 c -1.57401,0 -2.84135,1.26735 -2.84135,2.841346 v 3.998827 c 0,1.573999 1.26734,2.84079 2.84135,2.84079 h 3.78771 c 1.573999,0 2.841349,-1.266791 2.841349,-2.84079 v -3.998827 c 0,-1.573996 -1.26735,-2.841346 -2.841349,-2.841346 z m 51.981979,0 c -1.57401,0 -2.84077,1.26735 -2.84077,2.841346 v 3.998827 c 0,1.573999 1.26676,2.84079 2.84077,2.84079 h 3.78828 c 1.57401,0 2.84134,-1.266791 2.84134,-2.84079 v -3.998827 c 0,-1.573996 -1.26733,-2.841346 -2.84134,-2.841346 z m 17.67863,0.210552 c -1.574,0 -2.84134,1.26735 -2.84134,2.841346 v 3.998829 c 0,1.573996 1.26734,2.840788 2.84134,2.840788 h 3.7877 c 1.57403,0 2.84137,-1.266792 2.84137,-2.840788 v -3.998829 c 0,-1.573996 -1.26734,-2.841346 -2.84137,-2.841346 z m 30.09456,0 c -1.57401,0 -2.84078,1.26735 -2.84078,2.841346 v 3.998829 c 0,1.573996 1.26677,2.840788 2.84078,2.840788 h 3.78827 c 1.574,0 2.84135,-1.266792 2.84135,-2.840788 v -3.998829 c 0,-1.573996 -1.26735,-2.841346 -2.84135,-2.841346 z m -182.253939,0.84221 c -0.17487,0 -0.31524,0.140382 -0.31524,0.315273 v 67.135096 c 0,0.174887 0.14037,0.31583 0.31524,0.31583 h 67.97731 c 0.17488,0 0.31529,-0.140943 0.31529,-0.31583 V 29.444352 c 0,-0.174891 -0.14041,-0.315273 -0.31529,-0.315273 z m 166.259729,0.209994 c -1.574,0 -2.84134,1.267354 -2.84134,2.841349 v 3.99883 c 0,1.573994 1.26734,2.840785 2.84134,2.840785 h 3.78828 c 1.574,0 2.84078,-1.266791 2.84078,-2.840785 v -3.99883 c 0,-1.573995 -1.26678,-2.841349 -2.84078,-2.841349 z m 28.83235,0.421106 c -1.574,0 -2.84135,1.267351 -2.84135,2.841345 V 36.5998 c 0,1.573993 1.26735,2.841346 2.84135,2.841346 h 3.78827 c 1.574,0 2.84079,-1.267353 2.84079,-2.841346 v -3.998276 c 0,-1.573994 -1.26679,-2.841345 -2.84079,-2.841345 z m -102.70235,7.576554 c -1.57399,0 -2.84078,1.266792 -2.84078,2.84079 v 3.998827 c 0,1.573999 1.26679,2.841348 2.84078,2.841348 h 3.78827 c 1.57401,0 2.84135,-1.267349 2.84135,-2.841348 v -3.998827 c 0,-1.573998 -1.26734,-2.84079 -2.84135,-2.84079 z m -82.814029,0.525824 h 48.82592 c 0.1749,0 0.31528,0.140939 0.31528,0.315829 V 87.84597 c 0,0.174887 -0.14038,0.315272 -0.31528,0.315272 h -48.82592 c -0.17488,0 -0.31529,-0.140385 -0.31529,-0.315272 V 38.178386 c 0,-0.17489 0.14041,-0.315829 0.31529,-0.315829 z m 99.650459,3.26245 c -1.57403,0 -2.84081,1.266797 -2.84081,2.840791 v 3.998828 c 0,1.573998 1.26678,2.840791 2.84081,2.840791 h 3.78826 c 1.57397,0 2.84136,-1.266793 2.84136,-2.840791 v -3.998828 c 0,-1.573994 -1.26739,-2.840791 -2.84136,-2.840791 z m 18.52025,0.631101 c -1.57399,0 -2.84135,1.267353 -2.84135,2.841347 v 3.998273 c 0,1.573996 1.26736,2.841347 2.84135,2.841347 h 3.78827 c 1.57401,0 2.84081,-1.267351 2.84081,-2.841347 v -3.998273 c 0,-1.573994 -1.2668,-2.841347 -2.84081,-2.841347 z m 15.99476,1.473314 c -1.57401,0 -2.84135,1.266793 -2.84135,2.84079 v 3.998827 c 0,1.573996 1.26734,2.841348 2.84135,2.841348 h 3.78773 c 1.57398,0 2.84133,-1.267352 2.84133,-2.841348 v -3.998827 c 0,-1.573997 -1.26735,-2.84079 -2.84133,-2.84079 z m 18.51973,2.73607 c -1.574,0 -2.84079,1.266793 -2.84079,2.840792 v 3.998825 c 0,1.573996 1.26679,2.840791 2.84079,2.840791 h 3.78828 c 1.574,0 2.84135,-1.266795 2.84135,-2.840791 v -3.998825 c 0,-1.573999 -1.26735,-2.840792 -2.84135,-2.840792 z m -79.762129,0.209995 c -1.57401,0 -2.84135,1.267351 -2.84135,2.841347 v 3.998828 c 0,1.573998 1.26734,2.840791 2.84135,2.840791 h 3.78771 c 1.573999,0 2.841349,-1.266793 2.841349,-2.840791 v -3.998828 c 0,-1.573996 -1.26735,-2.841347 -2.841349,-2.841347 z m 97.861309,0 c -1.574,0 -2.84136,1.267351 -2.84136,2.841347 v 3.998828 c 0,1.573998 1.26736,2.840791 2.84136,2.840791 h 3.78827 c 1.574,0 2.84135,-1.266793 2.84135,-2.840791 v -3.998828 c 0,-1.573996 -1.26735,-2.841347 -2.84135,-2.841347 z m 15.3631,0 c -1.574,0 -2.84079,1.267351 -2.84079,2.841347 v 3.998828 c 0,1.573998 1.26679,2.840791 2.84079,2.840791 h 3.78827 c 1.574,0 2.84135,-1.266793 2.84135,-2.840791 v -3.998828 c 0,-1.573996 -1.26735,-2.841347 -2.84135,-2.841347 z M 32.344621,47.54352 c -0.17489,0 -0.31584,0.140944 -0.31584,0.31583 v 30.305656 c 0,0.174887 0.14095,0.315269 0.31584,0.315269 h 29.04287 c 0.17492,0 0.31586,-0.140382 0.31586,-0.315269 V 47.85935 c 0,-0.174886 -0.14094,-0.31583 -0.31586,-0.31583 z m 73.133059,7.260728 c -1.57401,0 -2.84081,1.267348 -2.84081,2.841344 v 3.998272 c 0,1.573993 1.2668,2.841347 2.84081,2.841347 h 3.78827 c 1.57398,0 2.84135,-1.267354 2.84135,-2.841347 v -3.998272 c 0,-1.573996 -1.26737,-2.841344 -2.84135,-2.841344 z m 32.6206,0.631655 c -1.574,0 -2.84132,1.266794 -2.84132,2.840792 v 3.998828 c 0,1.573995 1.26732,2.841344 2.84132,2.841344 h 3.78827 c 1.57401,0 2.84081,-1.267349 2.84081,-2.841344 v -3.998828 c 0,-1.573998 -1.2668,-2.840792 -2.84081,-2.840792 z m 17.46754,1.893861 c -1.57402,0 -2.84078,1.267349 -2.84078,2.841347 v 3.998273 c 0,1.573993 1.26676,2.841344 2.84078,2.841344 h 3.78827 c 1.574,0 2.84135,-1.267351 2.84135,-2.841344 v -3.998273 c 0,-1.573998 -1.26735,-2.841347 -2.84135,-2.841347 z m -31.98897,0.210553 c -1.57401,0 -2.84134,1.266793 -2.84134,2.840786 v 3.998831 c 0,1.573995 1.26733,2.841347 2.84134,2.841347 h 3.78828 c 1.57397,0 2.84134,-1.267352 2.84134,-2.841347 v -3.998831 c 0,-1.573993 -1.26737,-2.840786 -2.84134,-2.840786 z m 82.91931,1.052203 c -1.57399,0 -2.84134,1.267357 -2.84134,2.84135 v 3.998269 c 0,1.573999 1.26735,2.841348 2.84134,2.841348 h 3.78828 c 1.574,0 2.84079,-1.267349 2.84079,-2.841348 V 61.43387 c 0,-1.573993 -1.26679,-2.84135 -2.84079,-2.84135 z m -20.41414,3.788278 c -1.57399,0 -2.84133,1.266796 -2.84133,2.840791 v 3.998825 c 0,1.573999 1.26734,2.841348 2.84133,2.841348 h 3.78829 c 1.57398,0 2.84078,-1.267349 2.84078,-2.841348 v -3.998825 c 0,-1.573995 -1.2668,-2.840791 -2.84078,-2.840791 z M 94.955051,66.37907 c -1.574,0 -2.84135,1.267351 -2.84135,2.841344 v 3.998831 c 0,1.573996 1.26735,2.840791 2.84135,2.840791 h 3.78828 c 1.573999,0 2.840779,-1.266795 2.840779,-2.840791 v -3.998831 c 0,-1.573993 -1.26678,-2.841344 -2.840779,-2.841344 z m 60.844169,5.245433 a 64.585284,66.073422 0.10992222 0 0 -64.712099,65.949207 64.585284,66.073422 0.10992222 0 0 64.458639,66.19707 64.585284,66.073422 0.10992222 0 0 41.57246,-15.40262 l 4.37592,4.43328 a 12.798005,12.798005 0 0 0 3.13769,12.71059 12.798005,12.798005 0 0 0 0.53028,0.50743 c 0.0764,0.13059 0.17044,0.25369 0.28185,0.36653 l 32.54542,32.96932 c 0.0886,0.0899 0.18411,0.16838 0.28464,0.23616 a 12.798005,12.798005 0 0 0 18.03232,0.0507 12.798005,12.798005 0 0 0 0.18271,-18.03174 c -0.0665,-0.10144 -0.14371,-0.19828 -0.23228,-0.288 l -32.54542,-32.96878 c -0.11138,-0.11283 -0.23362,-0.20762 -0.36317,-0.28573 a 12.798005,12.798005 0 0 0 -0.50076,-0.53752 12.798005,12.798005 0 0 0 -12.66881,-3.302 l -4.57144,-4.63106 A 64.585284,66.073422 0.10992222 0 0 220.25784,137.82158 64.585284,66.073422 0.10992222 0 0 201.43065,91.064414 64.585284,66.073422 0.10992222 0 0 155.79922,71.624503 Z m -50.95264,1.910014 c -1.57401,0 -2.84135,1.267352 -2.84135,2.841347 v 3.998828 c 0,1.573998 1.26734,2.840792 2.84135,2.840792 h 3.78826 c 1.57402,0 2.84079,-1.266794 2.84079,-2.840792 v -3.998828 c 0,-1.573995 -1.26677,-2.841347 -2.84079,-2.841347 z m 102.07069,2.104972 c -1.574,0 -2.84134,1.266791 -2.84134,2.840786 v 3.998831 c 0,1.573993 1.26734,2.841345 2.84134,2.841345 h 3.78772 c 1.57399,0 2.84135,-1.267352 2.84135,-2.841345 v -3.998831 c 0,-1.573995 -1.26736,-2.840786 -2.84135,-2.840786 z m -51.13533,5.019284 a 57.038597,57.038597 0 0 1 40.30023,16.784052 57.038597,57.038597 0 0 1 16.62864,40.364275 57.038597,57.038597 0 0 1 -57.14834,56.92943 57.038597,57.038597 0 0 1 -56.928309,-57.14834 57.038597,57.038597 0 0 1 57.147779,-56.929417 z m -61.457979,3.819466 c -1.57398,0 -2.84135,1.267355 -2.84135,2.841348 v 3.99883 c 0,1.573996 1.26737,2.840789 2.84135,2.840789 h 3.78773 c 1.57398,0 2.841339,-1.266793 2.841339,-2.840789 v -3.99883 c 0,-1.573993 -1.267359,-2.841348 -2.841339,-2.841348 z m -53.66643,22.098001 c -1.57396,0 -2.84079,1.26735 -2.84079,2.84135 v 3.99827 c 0,1.574 1.26683,2.84135 2.84079,2.84135 h 3.78828 c 1.57402,0 2.84134,-1.26735 2.84134,-2.84135 v -3.99827 c 0,-1.574 -1.26732,-2.84135 -2.84134,-2.84135 z m 19.57249,0 c -1.57399,0 -2.84135,1.26735 -2.84135,2.84135 v 3.99827 c 0,1.574 1.26736,2.84135 2.84135,2.84135 h 3.78828 c 1.574,0 2.84079,-1.26735 2.84079,-2.84135 v -3.99827 c 0,-1.574 -1.26679,-2.84135 -2.84079,-2.84135 z m -45.03707,0.21055 c -1.57401,0 -2.84136,1.2668 -2.84136,2.84079 v 3.99883 c 0,1.574 1.26735,2.84135 2.84136,2.84135 h 3.7877 c 1.57402,0 2.84134,-1.26735 2.84134,-2.84135 v -3.99883 c 0,-1.57399 -1.26732,-2.84079 -2.84134,-2.84079 z m 63.55735,0.6311 c -1.57401,0 -2.84134,1.26736 -2.84134,2.84135 v 3.99883 c 0,1.574 1.26733,2.84079 2.84134,2.84079 h 3.78771 c 1.57401,0 2.84135,-1.26679 2.84135,-2.84079 v -3.99883 c 0,-1.57399 -1.26734,-2.84135 -2.84135,-2.84135 z m -52.19311,6.3138 c -1.57398,0 -2.84135,1.26735 -2.84135,2.84134 v 3.99828 c 0,1.57399 1.26737,2.84135 2.84135,2.84135 h 3.78828 c 1.574,0 2.84081,-1.26736 2.84081,-2.84135 v -3.99828 c 0,-1.57399 -1.26681,-2.84134 -2.84081,-2.84134 z m 24.83353,1.89386 c -1.574,0 -2.84079,1.26735 -2.84079,2.84134 v 3.99883 c 0,1.574 1.26679,2.84079 2.84079,2.84079 h 3.78829 c 1.574,0 2.84133,-1.26679 2.84133,-2.84079 v -3.99883 c 0,-1.57399 -1.26733,-2.84134 -2.84133,-2.84134 z m -16.20474,7.99766 c -1.57402,0 -2.84136,1.26679 -2.84136,2.84078 v 3.99883 c 0,1.574 1.26734,2.84135 2.84136,2.84135 h 3.78827 c 1.57397,0 2.84077,-1.26735 2.84077,-2.84135 v -3.99883 c 0,-1.57399 -1.2668,-2.84078 -2.84077,-2.84078 z m 25.88569,0.6311 c -1.57398,0 -2.84077,1.26735 -2.84077,2.84134 v 3.99827 c 0,1.574 1.26679,2.84135 2.84077,2.84135 h 3.78828 c 1.57401,0 2.84135,-1.26735 2.84135,-2.84135 v -3.99827 c 0,-1.57399 -1.26734,-2.84134 -2.84135,-2.84134 z m 13.2587,0.4211 c -1.57399,0 -2.84078,1.26679 -2.84078,2.84079 v 3.99883 c 0,1.574 1.26679,2.84135 2.84078,2.84135 h 3.78827 c 1.574,0 2.84135,-1.26735 2.84135,-2.84135 v -3.99883 c 0,-1.574 -1.26735,-2.84079 -2.84135,-2.84079 z m -59.34799,0.21055 c -1.57401,0 -2.84135,1.2668 -2.84135,2.8408 v 3.99882 c 0,1.574 1.26734,2.84135 2.84135,2.84135 h 3.78829 c 1.57395,0 2.84078,-1.26735 2.84078,-2.84135 v -3.99882 c 0,-1.574 -1.26683,-2.8408 -2.84078,-2.8408 z m 30.93673,9.47042 c -1.57396,0 -2.84132,1.26679 -2.84132,2.84079 v 3.99882 c 0,1.574 1.26736,2.84135 2.84132,2.84135 h 3.78832 c 1.57398,0 2.84077,-1.26735 2.84077,-2.84135 v -3.99882 c 0,-1.574 -1.26679,-2.84079 -2.84077,-2.84079 z m 16.62587,9.0493 c -1.57397,0 -2.84135,1.26735 -2.84135,2.84135 v 3.99827 c 0,1.574 1.26738,2.84135 2.84135,2.84135 h 3.78827 c 1.57402,0 2.84081,-1.26735 2.84081,-2.84135 v -3.99827 c 0,-1.574 -1.26679,-2.84135 -2.84081,-2.84135 z m -33.88337,0.42111 c -1.57398,0 -2.84079,1.26679 -2.84079,2.84079 v 3.99883 c 0,1.57399 1.26681,2.84135 2.84079,2.84135 h 3.78828 c 1.574,0 2.84135,-1.26736 2.84135,-2.84135 v -3.99883 c 0,-1.574 -1.26735,-2.84079 -2.84135,-2.84079 z m -13.67923,0.6311 c -1.57401,0 -2.84135,1.26735 -2.84135,2.84135 v 3.99883 c 0,1.57399 1.26734,2.84079 2.84135,2.84079 h 3.78829 c 1.57395,0 2.84078,-1.2668 2.84078,-2.84079 v -3.99883 c 0,-1.574 -1.26683,-2.84135 -2.84078,-2.84135 z m 29.67399,2.10497 c -1.57399,0 -2.84135,1.26679 -2.84135,2.84079 v 3.99883 c 0,1.57399 1.26736,2.84079 2.84135,2.84079 h 3.78827 c 1.574,0 2.84082,-1.2668 2.84082,-2.84079 v -3.99883 c 0,-1.574 -1.26682,-2.84079 -2.84082,-2.84079 z m 31.35785,0 c -1.57397,0 -2.84133,1.26679 -2.84133,2.84079 v 3.99883 c 0,1.57399 1.26736,2.84079 2.84133,2.84079 h 3.78828 c 1.57401,0 2.8408,-1.2668 2.8408,-2.84079 v -3.99883 c 0,-1.574 -1.26679,-2.84079 -2.8408,-2.84079 z m -63.5579,15.3631 c -0.17489,0 -0.31529,0.14038 -0.31529,0.31527 v 67.13511 c 0,0.17489 0.1404,0.31582 0.31529,0.31582 h 67.97727 c 0.1749,0 0.31529,-0.14093 0.31529,-0.31582 v -67.13511 c 0,-0.17489 -0.14039,-0.31527 -0.31529,-0.31527 z m 9.57566,8.73348 h 48.82595 c 0.17492,0 0.31524,0.14094 0.31524,0.31583 v 49.66757 c 0,0.17489 -0.14032,0.3153 -0.31524,0.3153 h -48.82595 c -0.17488,0 -0.31525,-0.14041 -0.31525,-0.3153 v -49.66757 c 0,-0.17489 0.14037,-0.31583 0.31525,-0.31583 z m 69.13481,2.21024 c -1.57403,0 -2.84079,1.2668 -2.84079,2.8408 v 3.99882 c 0,1.574 1.26676,2.84135 2.84079,2.84135 h 3.78826 c 1.57402,0 2.84136,-1.26735 2.84136,-2.84135 v -3.99882 c 0,-1.574 -1.26734,-2.8408 -2.84136,-2.8408 z m -59.24272,7.47072 c -0.17488,0 -0.31581,0.14095 -0.31581,0.31583 v 30.30566 c 0,0.17488 0.14093,0.31582 0.31581,0.31582 h 29.04235 c 0.17488,0 0.31582,-0.14094 0.31582,-0.31582 v -30.30566 c 0,-0.17488 -0.14094,-0.31583 -0.31582,-0.31583 z m 59.87435,8.9446 c -1.57398,0 -2.84132,1.26735 -2.84132,2.84135 v 3.99827 c 0,1.57399 1.26734,2.84134 2.84132,2.84134 h 3.78773 c 1.57399,0 2.84136,-1.26735 2.84136,-2.84134 v -3.99827 c 0,-1.574 -1.26737,-2.84135 -2.84136,-2.84135 z m 18.519719,3.99883 c -1.57398,0 -2.84077,1.26678 -2.84077,2.84079 v 3.99882 c 0,1.574 1.26679,2.84079 2.84077,2.84079 h 3.78828 c 1.57401,0 2.84135,-1.26679 2.84135,-2.84079 v -3.99882 c 0,-1.57401 -1.26734,-2.84079 -2.84135,-2.84079 z m -7.78654,8.83875 c -1.57398,0 -2.841339,1.26733 -2.841339,2.84134 v 3.99827 c 0,1.57399 1.267359,2.84136 2.841339,2.84136 h 3.78828 c 1.57401,0 2.84078,-1.26737 2.84078,-2.84136 v -3.99827 c 0,-1.57401 -1.26677,-2.84134 -2.84078,-2.84134 z m 77.65773,1.89441 c -1.57399,0 -2.84133,1.26679 -2.84133,2.84078 v 3.99885 c 0,1.57398 1.26734,2.84132 2.84133,2.84132 h 3.78828 c 1.57399,0 2.84079,-1.26734 2.84079,-2.84132 v -3.99885 c 0,-1.57399 -1.2668,-2.84078 -2.84079,-2.84078 z m -21.0458,1.26276 c -1.57398,0 -2.84079,1.26681 -2.84079,2.8408 v 3.99883 c 0,1.57396 1.26681,2.84077 2.84079,2.84077 h 3.78827 c 1.57401,0 2.84135,-1.26681 2.84135,-2.84077 v -3.99883 c 0,-1.57399 -1.26734,-2.8408 -2.84135,-2.8408 z m -37.25,1.05221 c -1.57397,0 -2.84135,1.2668 -2.84135,2.84079 v 3.99881 c 0,1.574 1.26738,2.84136 2.84135,2.84136 h 3.78774 c 1.57397,0 2.84134,-1.26736 2.84134,-2.84136 v -3.99881 c 0,-1.57399 -1.26737,-2.84079 -2.84134,-2.84079 z m 17.46753,0.84166 c -1.57401,0 -2.84135,1.26735 -2.84135,2.84135 v 3.99825 c 0,1.574 1.26734,2.84134 2.84135,2.84134 h 3.78828 c 1.57397,0 2.84078,-1.26734 2.84078,-2.84134 v -3.99825 c 0,-1.574 -1.26681,-2.84135 -2.84078,-2.84135 z m -47.142059,3.1566 c -1.57401,0 -2.84081,1.26737 -2.84081,2.84134 v 3.99885 c 0,1.574 1.2668,2.8408 2.84081,2.8408 h 3.78828 c 1.57397,0 2.84132,-1.2668 2.84132,-2.8408 v -3.99885 c 0,-1.57397 -1.26735,-2.84134 -2.84132,-2.84134 z m 101.649579,4.84049 c -1.574,0 -2.84079,1.26734 -2.84079,2.84135 v 3.99883 c 0,1.57399 1.26679,2.84078 2.84079,2.84078 h 3.78827 c 1.574,0 2.84135,-1.26679 2.84135,-2.84078 v -3.99883 c 0,-1.57401 -1.26735,-2.84135 -2.84135,-2.84135 z m -82.49823,4.20939 c -1.57399,0 -2.84076,1.26679 -2.84076,2.84077 v 3.99885 c 0,1.57396 1.26677,2.84135 2.84076,2.84135 h 3.78829 c 1.57401,0 2.84134,-1.26739 2.84134,-2.84135 v -3.99885 c 0,-1.57398 -1.26733,-2.84077 -2.84134,-2.84077 z m 18.30975,0.42055 c -1.57401,0 -2.84135,1.26735 -2.84135,2.84136 v 3.99882 c 0,1.57399 1.26734,2.84077 2.84135,2.84077 h 3.78827 c 1.57398,0 2.84077,-1.26678 2.84077,-2.84077 v -3.99882 c 0,-1.57401 -1.26679,-2.84136 -2.84077,-2.84136 z m 20.83523,0.21056 c -1.57399,0 -2.84136,1.26734 -2.84136,2.84135 v 3.99879 c 0,1.57401 1.26737,2.84081 2.84136,2.84081 h 3.78773 c 1.57399,0 2.84131,-1.2668 2.84131,-2.84081 v -3.99879 c 0,-1.57401 -1.26732,-2.84135 -2.84131,-2.84135 z m 27.77959,0.21053 c -1.57398,0 -2.84079,1.26735 -2.84079,2.84135 v 3.99828 c 0,1.57398 1.26681,2.84136 2.84079,2.84136 h 3.78827 c 1.574,0 2.84134,-1.26738 2.84134,-2.84136 v -3.99828 c 0,-1.574 -1.26734,-2.84135 -2.84134,-2.84135 z m -83.760979,1.05221 c -1.57398,0 -2.84077,1.26734 -2.84077,2.84135 v 3.99827 c 0,1.57401 1.26679,2.84135 2.84077,2.84135 h 3.78827 c 1.57402,0 2.841369,-1.26734 2.841369,-2.84135 v -3.99827 c 0,-1.57401 -1.267349,-2.84135 -2.841369,-2.84135 z m 70.081729,0.21056 c -1.57398,0 -2.84135,1.26735 -2.84135,2.84135 v 3.99827 c 0,1.57401 1.26737,2.84134 2.84135,2.84134 h 3.78827 c 1.57402,0 2.84081,-1.26733 2.84081,-2.84134 v -3.99827 c 0,-1.574 -1.26679,-2.84135 -2.84081,-2.84135 z" />
    <path
       style="font-size:144px;line-height:1.25;font-family:Cambria;-inkscape-font-specification:'Cambria, Normal';display:inline;fill:#ffffff;fill-opacity:1;stroke-width:0.859713"
       d="m 130.63837,179.25656 v -2.96199 c 0,-29.54446 0.18923,-8.14475 0.19476,-64.43832 l 0.003,-15.112176 h 25.99147 c 6.40757,0 11.54568,0.685088 15.41442,2.055265 3.90902,1.370161 6.81055,3.405271 8.70461,6.105311 1.89406,2.65974 2.84109,6.10532 2.84109,10.33673 0,3.50603 -0.68508,6.54861 -2.05526,9.12776 -1.32987,2.57914 -3.08288,4.71499 -5.25903,6.40756 -2.17615,1.69256 -4.97694,3.26423 -8.40236,4.715 v 0.54404 c 5.48068,1.65226 9.63149,4.21126 12.45242,7.67699 2.82094,3.42542 4.23141,7.51578 4.23141,12.27108 0,5.48068 -1.22912,9.95389 -3.68736,13.41962 -2.41796,3.46572 -5.82323,5.98441 -10.21583,7.55609 -4.3926,1.53136 -9.71212,2.29704 -15.95847,2.29704 z m 22.07718,-45.51788 c 6.12551,0 10.80019,-1.47092 14.02413,-4.41275 3.26423,-2.98214 4.89636,-7.29414 4.89636,-12.93602 0,-2.78064 -0.46345,-5.0777 -1.39035,-6.89116 -0.88657,-1.85376 -2.13583,-3.32467 -3.74781,-4.41275 -1.57165,-1.08809 -3.44558,-1.85376 -5.62172,-2.29705 -2.17616,-0.48359 -4.53366,-0.72539 -7.0725,-0.72539 -1.53138,0 -3.54634,0.0403 -6.0449,0.1209 -2.49853,0.0806 -4.37243,0.16119 -5.62172,0.24179 v 31.31243 z m -10.57851,39.77526 c 2.94185,0.28209 6.22621,0.42314 9.85314,0.42314 5.27921,0 9.36955,-0.66493 12.27107,-1.99481 2.94186,-1.32987 5.05755,-3.28438 6.34713,-5.86353 1.32987,-2.61943 1.99482,-5.88367 1.99482,-9.79268 0,-3.90902 -0.72537,-7.13295 -2.17615,-9.67179 -1.41048,-2.53886 -3.60678,-4.43291 -6.5889,-5.68219 -2.98216,-1.24928 -7.09266,-1.87391 -12.33155,-1.87391 h -9.36956 z"
       id="path16"
       aria-label="B"
       sodipodi:nodetypes="ccscsccscscccsccscscscccssccscsccscsscc" />
    <script
       id="mesh_polyfill"
       type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
  </g>
  <script
     id="script1"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
